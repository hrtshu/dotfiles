#!/bin/bash

if [ -z "${BASH_SOURCE}" ]; then
    echo "Please execute with bash" 1>&2
    return 1
fi

if [ "${BASH_SOURCE}" != "$0" ]; then
    echo "Don't use . (dot) and source command. Please execute directory." 1>&2
    return 1
fi

DOTFILES_ROOT="$(cd $(dirname $0) && pwd)"
DOTFILES_FILES=(".profile" ".bashrc" ".inputrc" ".gitconfig" ".tmux.conf" ".tigrc")
SSH_CONFIG="ssh_config"
SSH_CONFIG_DEST="config"
SSH_GIT_CONFIG="ssh_git_config"
SSH_AGENT_CONFIG="ssh_agent_config"
SSH_GIT_CONFIG_DEST="git"
SSH_AGENT_CONFIG_DEST="agent"
SUDOERS_NOPASSWD="sudoers.nopasswd"
SUDOERS_NOPASSWD_DEST="nopasswd"
WSL_CONF="wsl.conf"

VIMRUNTIME_REPO="https://github.com/hrtshu/vimrc.git"
VIMRUNTIME_ROOT_DIR=".vim_runtime"
VIMRUNTIME_INSTALLER_FILE="install_awesome_vimrc.sh"

XDG_DIRS_UPDATE=/usr/bin/xdg-user-dirs-update
OS_RELEASE=/proc/sys/kernel/osrelease

function ln_ () {
    src="$1"
    dest="$2"

    [ "$src" = "`readlink $dest`" ] && return

    ln -i -s "$src" "$dest"
}

if [ $# -ge 2 ]; then
    echo "Usage: $0 [destination]" 1>&2
    exit 1
fi

DEST="$1"
[ -z "$DEST" ] && DEST=~
if [ ! -d "$DEST" ]; then
    echo "Not exists or not a directory: $DEST" 1>&2
    exit 1
fi

for git in "/usr/bin/git" "/bin/git"; do
    if [ -x "$git" ]; then
        GIT="$git"
        break
    fi
done

SSH_DIR="$DEST/.ssh"
SSH_CONFIG_DIR="$SSH_DIR/config.d"
VIMRUNTIME_ROOT="$DEST/$VIMRUNTIME_ROOT_DIR"
VIMRUNTIME_INSTALLER="$VIMRUNTIME_ROOT/$VIMRUNTIME_INSTALLER_FILE"

for file in "${DOTFILES_FILES[@]}"; do
    src="$DOTFILES_ROOT/$file"
    dest="$DEST/$file"
    ln_ "$src" "$dest"
done

[ ! -e "$SSH_DIR" ] && mkdir "$SSH_DIR"
[ ! -e "$SSH_CONFIG_DIR" ] && mkdir "$SSH_CONFIG_DIR"
chmod -f 600 "$DOTFILES_ROOT/$SSH_CONFIG"
chmod -f 600 "$DOTFILES_ROOT/$SSH_GIT_CONFIG"
chmod -f 600 "$DOTFILES_ROOT/$SSH_AGENT_CONFIG"
ln_ "$DOTFILES_ROOT/$SSH_CONFIG" "$SSH_DIR/$SSH_CONFIG_DEST"
ln_ "$DOTFILES_ROOT/$SSH_GIT_CONFIG" "$SSH_CONFIG_DIR/$SSH_GIT_CONFIG_DEST"
ln_ "$DOTFILES_ROOT/$SSH_AGENT_CONFIG" "$SSH_CONFIG_DIR/$SSH_AGENT_CONFIG_DEST"

if [ ! -e "$VIMRUNTIME_ROOT" ]; then
    if [ ! -z "$GIT" ]; then
        "$GIT" clone --depth=1 "$VIMRUNTIME_REPO" "$VIMRUNTIME_ROOT"
        . "$VIMRUNTIME_INSTALLER"
    else
        echo "Skipped vimrc installation because Git is not installed." 1>&2
    fi
fi

HOME=~
if [ "$DEST" == "$HOME" -a -x "$XDG_DIRS_UPDATE" ]; then
    "$XDG_DIRS_UPDATE"
fi

if [ -r "$OS_RELEASE" ] && grep -q Microsoft "$OS_RELEASE"; then
    echo "Please enter your password to install /etc/sudoers.d/sudoers.nopasswd"
    nopasswd_dest="/etc/sudoers.d/$SUDOERS_NOPASSWD_DEST"
    sudo sh -c "
        cp -i \"$DOTFILES_ROOT/$SUDOERS_NOPASSWD\" \"$nopasswd_dest\" &&
        chown 0:0 \"$nopasswd_dest\" && chmod 440 \"$nopasswd_dest\"
    "
    wsl_dest="/etc/$WSL_CONF"
    sudo sh -c "
        cp -i \"$DOTFILES_ROOT/$WSL_CONF\" \"$wsl_dest\" &&
        chown 0:0 \"$wsl_dest\" && chmod 644 \"$wsl_dest\"
    "
fi
